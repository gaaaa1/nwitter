[{"C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\index.js":"1","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\components\\App.js":"2","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\components\\Router.js":"3","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\routes\\Home.js":"4","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\routes\\Auth.js":"5","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\fBase.js":"6","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\components\\Navigation.js":"7","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\routes\\Profile.js":"8","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\components\\Nweet.js":"9"},{"size":206,"mtime":1609595448935,"results":"10","hashOfConfig":"11"},{"size":687,"mtime":1612665838430,"results":"12","hashOfConfig":"11"},{"size":1029,"mtime":1610241342937,"results":"13","hashOfConfig":"11"},{"size":3633,"mtime":1612672083902,"results":"14","hashOfConfig":"11"},{"size":2797,"mtime":1609668030207,"results":"15","hashOfConfig":"11"},{"size":804,"mtime":1612671012953,"results":"16","hashOfConfig":"11"},{"size":308,"mtime":1609668561183,"results":"17","hashOfConfig":"11"},{"size":392,"mtime":1609669136405,"results":"18","hashOfConfig":"11"},{"size":2531,"mtime":1612673639529,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"j5eb3m",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\index.js",[],["42","43"],"C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\components\\App.js",["44","45"],"import React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fBase\";\r\n\r\nfunction App() {\r\n    const [init, setInit] = useState(false);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [userObj, setUserObj] = useState(null);\r\n    useEffect(() => {\r\n        authService.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setUserObj(user);\r\n            }\r\n            setInit(true);\r\n        });\r\n    }, []);\r\n    return (\r\n        <>\r\n            { init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"Loadding...\"}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\components\\Router.js",[],"C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\routes\\Home.js",["46","47"],"\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Nweet from \"../components/Nweet\";\r\nimport { dbService, storageService } from \"../fBase\";\r\n\r\nconst Home = ({ userObj }) => {\r\n\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [nweets, setNweets] = useState([]);\r\n    const [attachment, setAttachment] = useState();\r\n\r\n    useEffect(() => {\r\n        //nweets firebase�� �����Ͱ� ���Ҷ����� ����� (��ȭ�� ����)\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id: doc.id, ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n\r\n        if (attachment != \"\") {\r\n            const attachmentRef = storageService.ref().child(userObj.uid + '/' + uuidv4());\r\n            const reponse = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await reponse.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        // file�� �о���� �о�� ���ϵ��� �迭�� �������\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0]; //�������� �����ص� �ϳ��� �о���� ����\r\n                                  //console.log(files) �ؼ� ���� �迭�� ��������\r\n        const reader = new FileReader();  //������ �о�� ��ü ����\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                // ���������� �о�� ������ �迭���� ������ url ���� �������ִ� result�� ã��\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            // �о�� ���� url�� Attachment�� �־���\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);  // ������ url�� ���� �о��\r\n\r\n    }\r\n\r\n    const onClearAttachmentClick = () => {\r\n        //���ε�� ������ ����� ���\r\n        //���� �ּҸ� �������ִ� attachment�� null ������ ����\r\n        setAttachment(null);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n                <input type=\"submit\" value=\"Nweet\" />\r\n                {attachment && (\r\n                    <div>\r\n                        <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                        <button onClick={ onClearAttachmentClick }>clear</button>\r\n                    </div>\r\n                )}\r\n            </form>\r\n            <div>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\routes\\Auth.js",[],"C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\fBase.js",[],"C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\components\\Navigation.js",[],"C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\routes\\Profile.js",["48"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authService } from \"../fBase\";\r\n\r\nexport default () => {\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }\r\n    return (\r\n        <>\r\n            <button onClick={ onLogOutClick }>Log Out</button>\r\n        </>\r\n    );\r\n}","C:\\Users\\SAMSUNG\\Source\\Repos\\nomadecoder\\nwitter\\src\\components\\Nweet.js",["49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":7,"column":12,"nodeType":"57","messageId":"58","endLine":7,"endColumn":22},{"ruleId":"55","severity":1,"message":"59","line":7,"column":24,"nodeType":"57","messageId":"58","endLine":7,"endColumn":37},{"ruleId":"60","severity":1,"message":"61","line":27,"column":24,"nodeType":"62","messageId":"63","endLine":27,"endColumn":26},{"ruleId":"64","severity":1,"message":"65","line":89,"column":25,"nodeType":"66","endLine":89,"endColumn":76},{"ruleId":"67","severity":1,"message":"68","line":5,"column":1,"nodeType":"69","endLine":16,"endColumn":2},{"ruleId":"70","severity":1,"message":"71","line":34,"column":51,"nodeType":"72","endLine":36,"endColumn":29},{"ruleId":"64","severity":1,"message":"65","line":50,"column":56,"nodeType":"66","endLine":50,"endColumn":121},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'isLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'setIsLoggedIn' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-global-assign","no-unsafe-negation"]