{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","reponse","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","autoFocus","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.debcac9c.chunk.js","sourcesContent":["//import * as firebase from \"firebase/app\"; //firebase ����\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGEIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth(); \r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"../fBase\";\r\n\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    className=\"authInput\"\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"authInput authSubmit\"\r\n                    value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n\r\n\r\n        </>\r\n  );\r\n};\r\nexport default AuthForm;","import React from \"react\";\r\nimport AuthForm from \"../components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"../fBase\";\r\n\r\nconst Auth = () => {\r\n    \r\n    const onSocialClick = async (event) => {\r\n        const { name } = event.target;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"../fBase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);      // edit�� ����ϴ��� ���ϴ��� ���� (true or false)\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);    //������ ������ ������Ʈ�ϱ� ���� �뵵\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if (ok) {\r\n            //delete\r\n            await dbService.doc(\"nweets/\" + nweetObj.id).delete();  //document.collection/nweetsID.delete\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(nweetObj, newNweet)\r\n        await dbService.doc(\"nweets/\" + nweetObj.id).update({\r\n            text:newNweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const { value } = event.target;\r\n        setNewNweet(value);\r\n    };\r\n    return (\r\n        <div className=\"nweet\">\r\n            {\r\n                editing ? (\r\n                    <>\r\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                            {/* nweet ���� �� */}\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Edit your nweet\"\r\n                                value={newNweet}\r\n                                onChange={onChange}\r\n                                required\r\n                            />\r\n                            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                        </form>\r\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                            Cancel\r\n                        </span>\r\n                    </>\r\n                ) : (\r\n                        <>\r\n                            {/* nweet �����ƴ� ��� �Ϲ����� �ǽð� nweet�� ������ */}\r\n                            <h4>{nweetObj.text}</h4>\r\n                            {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                            {isOwner && (\r\n                                <div class=\"nweet__actions\">\r\n                                    <span onClick={onDeleteClick}>\r\n                                        <FontAwesomeIcon icon={faTrash} />\r\n                                    </span>\r\n                                    <span onClick={toggleEditing}>\r\n                                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                                    </span>\r\n                                </div>\r\n                            )}\r\n                        </>\r\n                )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nweet;","\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"../fBase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(userObj.uid + '/' + uuidv4());\r\n            const reponse = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await reponse.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        // file�� �о���� �о�� ���ϵ��� �迭�� �������\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0]; //�������� �����ص� �ϳ��� �о���� ����\r\n        //console.log(files) �ؼ� ���� �迭�� ��������\r\n        const reader = new FileReader();  //������ �о�� ��ü ����\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                // ���������� �о�� ������ �迭���� ������ url ���� �������ִ� result�� ã��\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            // �о�� ���� url�� Attachment�� �־���\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);  // ������ url�� ���� �о��\r\n\r\n    }\r\n\r\n    const onClearAttachment = () => {\r\n        //���ε�� ������ ����� ���\r\n        //���� �ּҸ� �������ִ� attachment�� null ������ ����\r\n        setAttachment(\"\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            {/* nweet �Է� �� */}\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n          \r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NweetFactory;","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Nweet from \"../components/Nweet\";\r\nimport NweetFactory from \"../components/NweetFactory\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Home = ({ userObj }) => {\r\n\r\n    const [nweets, setNweets] = useState([]);\r\n    \r\n\r\n    useEffect(() => {\r\n        //nweets firebase�� �����Ͱ� ���Ҷ����� ����� (��ȭ�� ����)\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id: doc.id, ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Navigation = ({ userObj }) => (\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                            ? `${userObj.displayName}�� Profile`\r\n                            : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authService, dbService } from \"../fBase\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const getMyNweets = async () => {\r\n        //���� , �����ͺ��̽����� userid�� �Էµ� ������ �������� �� ���ں��� ����\r\n        const nweets = await dbService.collection(\"nweets\").where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\").get();\r\n        console.log(nweets.docs.map(doc => doc.data()));\r\n    };\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, []);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={ userObj }/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </div>\r\n                    ) :\r\n                    (\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"../fBase\";\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(() => {\r\n\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n        \"Initializing...\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}